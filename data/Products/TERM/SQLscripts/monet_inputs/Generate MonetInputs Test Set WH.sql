DROP TABLE IF EXISTS `MonetInputsTestSetWH`;
CREATE TABLE IF NOT EXISTS `MonetInputsTestSetWH` AS
SELECT
    First(`Monet Inputs WholeLife`.PolNo) AS FirstOfPolNo,
    Min(`Monet Inputs WholeLife`.PeriodIF) AS MinOfPeriodIF,
    `Monet Inputs WholeLife`.Product AS Выражение1,
    `Monet Inputs WholeLife`.Joined AS Выражение2,
    `Monet Inputs WholeLife`.Sex1 AS Выражение3,
    `Monet Inputs WholeLife`.Sex2 AS Выражение4,
    `Monet Inputs WholeLife`.Country AS Выражение5,
    Avg(`Monet Inputs WholeLife`.AgeEnt1) AS AvgOfAgeEnt1,
    Min(`Monet Inputs WholeLife`.AgeEnt2) AS MinOfAgeEnt2,
    `Monet Inputs WholeLife`.Smoker1 AS Выражение6,
    `Monet Inputs WholeLife`.Smoker2 AS Выражение7,
    `Monet Inputs WholeLife`.PremFreq AS Выражение8,
    Avg(`Monet Inputs WholeLife`.SPWithOptions) AS AvgOfSPWithOptions,
    Avg(`Monet Inputs WholeLife`.SPWithTI) AS AvgOfSPWithTI,
    Avg(`Monet Inputs WholeLife`.SPadd) AS AvgOfSPadd,
    Avg(`Monet Inputs WholeLife`.SumAssuredEnt) AS AvgOfSumAssuredEnt,
    Min(`Monet Inputs WholeLife`.Term) AS MinOfTerm,
    Min(`Monet Inputs WholeLife`.TermPrem) AS MinOfTermPrem,
    `Monet Inputs WholeLife`.BenefitType AS Выражение9,
    Avg(`Monet Inputs WholeLife`.MortgageRate) AS AvgOfMortgageRate,
    Avg(`Monet Inputs WholeLife`.SumAssuredEnt2) AS AvgOfSumAssuredEnt2,
    `Monet Inputs WholeLife`.BenefitType2 AS Выражение10,
    Avg(`Monet Inputs WholeLife`.MortgageRate2) AS AvgOfMortgageRate2,
    `Monet Inputs WholeLife`.Count AS Выражение11,
    Avg(`Monet Inputs WholeLife`.APWithOptions) AS AvgOfAPWithOptions,
    Avg(`Monet Inputs WholeLife`.APWithTI) AS AvgOfAPWithTI,
    Avg(`Monet Inputs WholeLife`.AnnualPremium) AS AvgOfAnnualPremium,
    `Monet Inputs WholeLife`.CalcPremium AS Выражение12,
    First(`Monet Inputs WholeLife`.`Internal status`) AS `FirstOfInternal status`,
    Max(`Monet Inputs WholeLife`.DOC) AS MaxOfDOC,
    `Monet Inputs WholeLife`.CalcEngine AS Выражение13,
    `Monet Inputs WholeLife`.Guarantee AS Выражение14,
    First(`Monet Inputs WholeLife`.TerminalIllness) AS FirstOfTerminalIllness,
    `Monet Inputs WholeLife`.ApplicationType AS Выражение15,
    `Monet Inputs WholeLife`.CommissionRP AS Выражение16,
    `Monet Inputs WholeLife`.CommissionSP AS Выражение17,
    Min(`Monet Inputs WholeLife`.TermComm) AS MinOfTermComm,
    `Monet Inputs WholeLife`.AddPrem AS Выражение18,
    `Monet Inputs WholeLife`.RIModel AS Выражение19,
    999 AS Expr1,
    0 AS SAEnd
FROM
    `Monet Inputs WholeLife`
GROUP BY
    `Monet Inputs WholeLife`.Product,
    `Monet Inputs WholeLife`.Joined,
    `Monet Inputs WholeLife`.Sex1,
    `Monet Inputs WholeLife`.Sex2,
    `Monet Inputs WholeLife`.Country,
    `Monet Inputs WholeLife`.Smoker1,
    `Monet Inputs WholeLife`.Smoker2,
    `Monet Inputs WholeLife`.PremFreq,
    `Monet Inputs WholeLife`.BenefitType,
    `Monet Inputs WholeLife`.BenefitType2,
    `Monet Inputs WholeLife`.Count,
    `Monet Inputs WholeLife`.CalcPremium,
    `Monet Inputs WholeLife`.CalcEngine,
    `Monet Inputs WholeLife`.Guarantee,
    `Monet Inputs WholeLife`.ApplicationType,
    `Monet Inputs WholeLife`.CommissionRP,
    `Monet Inputs WholeLife`.CommissionSP,
    `Monet Inputs WholeLife`.AddPrem,
    `Monet Inputs WholeLife`.RIModel;