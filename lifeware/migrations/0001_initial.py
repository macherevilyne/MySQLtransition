# Generated by Django 4.1.6 on 2024-02-26 09:19

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import lifeware.storage
import lifeware.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ExecuteMacros',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('db_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ExecuteSql',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('db_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='LifeWare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(editable=False, max_length=50, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('date_upload', models.DateTimeField(default=django.utils.timezone.now)),
                ('bestandsreport', models.FileField(blank=True, default=None, max_length=500, null=True, storage=lifeware.storage.OverwriteStorage(), upload_to=lifeware.utils.bestandsreport_path_name, validators=[django.core.validators.FileExtensionValidator(['csv']), lifeware.utils.validate_filename_bestandsreport])),
                ('bewegungs_report', models.FileField(blank=True, default=None, max_length=500, null=True, storage=lifeware.storage.OverwriteStorage(), upload_to=lifeware.utils.bewegungs_report_path_name, validators=[django.core.validators.FileExtensionValidator(['csv']), lifeware.utils.validate_filename_bewegungs_report])),
                ('lapses_since_inception', models.FileField(blank=True, default=None, max_length=500, null=True, storage=lifeware.storage.OverwriteStorage(), upload_to=lifeware.utils.lapses_since_inception_path_name, validators=[django.core.validators.FileExtensionValidator(['csv']), lifeware.utils.validate_filename_lapses_since_inception])),
                ('termsheet_report', models.FileField(blank=True, default=None, max_length=500, null=True, storage=lifeware.storage.OverwriteStorage(), upload_to=lifeware.utils.termsheet_report_path_name, validators=[django.core.validators.FileExtensionValidator(['csv']), lifeware.utils.validate_filename_termsheet_report])),
            ],
            options={
                'verbose_name_plural': 'LifeWare',
            },
        ),
        migrations.CreateModel(
            name='UserMacros',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_macros', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='UserSql',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('query', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='UserMacrosSql',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(blank=True, null=True)),
                ('user_macros', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lifeware.usermacros')),
                ('user_sql', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lifeware.usersql')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='usermacros',
            name='user_sql',
            field=models.ManyToManyField(through='lifeware.UserMacrosSql', to='lifeware.usersql'),
        ),
        migrations.CreateModel(
            name='Parameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('val_date', models.DateTimeField(verbose_name='ValDate')),
                ('val_date_old', models.DateTimeField(blank=True, default=None, null=True)),
                ('life_ware', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='lifeware.lifeware')),
            ],
            options={
                'verbose_name_plural': 'Parameters',
            },
        ),
    ]
